// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ContractABI is the input ABI used to generate the binding from.
const ContractABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"_a\",\"type\":\"uint256\"},{\"name\":\"_b\",\"type\":\"uint256\"},{\"name\":\"_c\",\"type\":\"uint256\"},{\"name\":\"_d\",\"type\":\"uint256\"},{\"name\":\"_e\",\"type\":\"uint256\"},{\"name\":\"_f\",\"type\":\"uint256\"},{\"name\":\"_g\",\"type\":\"uint256\"},{\"name\":\"_h\",\"type\":\"uint256\"},{\"name\":\"_i\",\"type\":\"bytes32\"},{\"name\":\"_j\",\"type\":\"bytes32\"},{\"name\":\"_k\",\"type\":\"bytes32\"},{\"name\":\"_l\",\"type\":\"bytes32\"},{\"name\":\"_m\",\"type\":\"bytes32\"},{\"name\":\"_n\",\"type\":\"bytes32\"}],\"name\":\"setData\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"print\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ContractBin is the compiled bytecode used for deploying new contracts.
const ContractBin = `0x60806040526040518061038001604052807f2594d6bd1c6a6e2b6eea9127790ab8b882d84f8a989177acd794ce50c68ac52281526020017f2a1a3d100dfdd38dfe14dd46be088a5910c8b241ac60fc5cc2aff5d43e2419b481526020017f1013fbd57b3e665c5d6b9a1991022b92f2562431394e032b4fdc1559d362298681526020017f0673a8b3d7a6f1536af1c331faaf8c24cd67d314b1d3df66ea40ee274c082c0381526020017f1a6b98c11c3881ece3c2f8ca679a7b7834c14862e9eef5316eb67e79195af30581526020017f01c229ea0739768659f8dc15f24dd0b0b865c542889840b1c0d53462280c6d1a81526020017f1142f739843c2162fcd0ab805bf4b223f9d3ef13c0890c585c1513f550831e9d81526020017f06afe24eefdb918f57e363fbcd69441118a31b6e03e05a112348b69060d928d181526020017f2b7c001a83bf3123f7ccc68c414ac619a47bdb17a5f042c2ad8930d37282210781526020017f26082214c8e2a0e7e403bd8dccdf1aec6c355634ede8c3fb091996d4d463cc5d81526020017f1bc6c04518d65b3a0e703ea342356c418a42350b9e70123386be51a2be1403da81526020017f209c637fd576867019a70ac3eb4e1a781fe73d696413fb7d4df68b1de388788981526020017f0aeaf59bb0e17af9a6295b923746df448a95172b68d37719bde02b02c91f181c81526020017f05d1b37e9c18c6b72d5a6bbfa032dcc132f6b5a7def57963dfd97a7b6851a17981526020017efd8df63d6b4f14df0d0dc7d87c8cd45ca36382dbd9551e70e00736eea4cf2881526020017f0b9ddd9ecaf5c596393e30a88f116d0e048ba6584427576aa01dcf542e026dca81526020017f0950ee70b84d362cee1316f030ce221f95142fecf294457f5dc2277918c1e1b581526020017f21517e80714afb1d361cf954822ed8f6a56777a781db7211c645bbcc2dad90b081526020017f0c38eb3acc661941a2707557a130404a1fe3d30df0ccea8be1776cae0aee65e281526020017f15588145f13d89d7f5f2827db944662e79568eb234418027866d7af0039cf44281526020017e4b3dc0ceea26c2a5fc6728ec99c0053dd0fa079fb7be8cd74a5e206fc3abf681526020017f28825635e6c52cf468a28ea039c0059f0d27fe367285fd1f8b86052eb36e78fb81526020017f159a1f87a00f993bbfd7eb1c33146179729a32c581e7bcd6a2368e4f23db453981526020017f2b2f4d5fa47dd7b1e1167cc5ceb9066aecdae809a3a11521ba42c14c760e891881526020017f15482428492f96677136643b0e81836bbfa3ea9c34036197dc71d6035948685c81526020017f1baeee4c928f7df34ab1a81cc38b23f56b6f2f61a6642e47c9d1e2d87c78c6dc81526020017f11ac5e94831f30ff7d54b9a8b14fc7944d990cf04c1609dd3773748e208cae7881526020017f29a0ded3f87afc9cf1d3ac49adb643bf32bf0084361aead3dd2d357e14453ba2815250600090601c6200044692919062000688565b5060006001553480156200045957600080fd5b50600060026000601f81106200046b57fe5b01819055506000600190505b6001601e01811015620004fe57620004ba600260018303601f81106200049957fe5b0154600260018403601f8110620004ac57fe5b01546200050560201b60201c565b600282601f8110620004c857fe5b0181905550600281601f8110620004db57fe5b0154602182601f8110620004eb57fe5b0181905550808060010191505062000477565b5062000702565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600081806200053657fe5b73__$6a6b205c487b5d17ff32d106822a848bb7$__63d15ca1098760006040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200058f57600080fd5b505af4158015620005a4573d6000803e3d6000fd5b505050506040513d6020811015620005bb57600080fd5b8101908080519060200190929190505050860890508180620005d957fe5b73__$6a6b205c487b5d17ff32d106822a848bb7$$6a6b205c487b5d17ff32d106822a848bb7$__63d15ca1098760006040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611cb957600080fd5b505af4158015611ccd573d6000803e3d6000fd5b505050506040513d6020811015611ce357600080fd5b8101908080519060200190929190505050860890508180611d0057fe5b73__$6a6b205c487b5d17ff32d106822a848bb7$__63d15ca10986846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611d5757600080fd5b505af4158015611d6b573d6000803e3d6000fd5b505050506040513d6020811015611d8157600080fd5b81019080805190602001909291905050508380611d9a57fe5b868408089050809250505092915050565b604051806040016040528060008152602001600081525090565b6040518060200160405280600190602082028038833980820191505090505090565b604051806103e00160405280601f90602082028038833980820191505090505090565b82601f8101928215611e39579160200282015b82811115611e38578251825591602001919060010190611e1d565b5b509050611e469190611e8e565b5090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b611eb091905b80821115611eac576000816000905550600101611e94565b5090565b9056fea265627a7a72305820080395c47c3576cbe4f0cb3fbbff25b457c615f32f18f42785e1fa28f167640564736f6c634300050a0032`

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// Print is a free data retrieval call binding the contract method 0x13bdfacd.
//
// Solidity: function print() constant returns(uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, bytes32, bytes32, bytes32, bytes32, bytes32, bytes32)
func (_Contract *ContractCaller) Print(opts *bind.CallOpts) (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, error) {
	var (
		ret0  = new(*big.Int)
		ret1  = new(*big.Int)
		ret2  = new(*big.Int)
		ret3  = new(*big.Int)
		ret4  = new(*big.Int)
		ret5  = new(*big.Int)
		ret6  = new(*big.Int)
		ret7  = new(*big.Int)
		ret8  = new([32]byte)
		ret9  = new([32]byte)
		ret10 = new([32]byte)
		ret11 = new([32]byte)
		ret12 = new([32]byte)
		ret13 = new([32]byte)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
		ret7,
		ret8,
		ret9,
		ret10,
		ret11,
		ret12,
		ret13,
	}
	err := _Contract.contract.Call(opts, out, "print")
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, *ret7, *ret8, *ret9, *ret10, *ret11, *ret12, *ret13, err
}

// Print is a free data retrieval call binding the contract method 0x13bdfacd.
//
// Solidity: function print() constant returns(uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, bytes32, bytes32, bytes32, bytes32, bytes32, bytes32)
func (_Contract *ContractSession) Print() (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, error) {
	return _Contract.Contract.Print(&_Contract.CallOpts)
}

// Print is a free data retrieval call binding the contract method 0x13bdfacd.
//
// Solidity: function print() constant returns(uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, bytes32, bytes32, bytes32, bytes32, bytes32, bytes32)
func (_Contract *ContractCallerSession) Print() (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, [32]byte, error) {
	return _Contract.Contract.Print(&_Contract.CallOpts)
}

// SetData is a paid mutator transaction binding the contract method 0xfb0953b6.
//
// Solidity: function setData(uint256 _a, uint256 _b, uint256 _c, uint256 _d, uint256 _e, uint256 _f, uint256 _g, uint256 _h, bytes32 _i, bytes32 _j, bytes32 _k, bytes32 _l, bytes32 _m, bytes32 _n) returns(bool)
func (_Contract *ContractTransactor) SetData(opts *bind.TransactOpts, _a *big.Int, _b *big.Int, _c *big.Int, _d *big.Int, _e *big.Int, _f *big.Int, _g *big.Int, _h *big.Int, _i [32]byte, _j [32]byte, _k [32]byte, _l [32]byte, _m [32]byte, _n [32]byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setData", _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n)
}

// SetData is a paid mutator transaction binding the contract method 0xfb0953b6.
//
// Solidity: function setData(uint256 _a, uint256 _b, uint256 _c, uint256 _d, uint256 _e, uint256 _f, uint256 _g, uint256 _h, bytes32 _i, bytes32 _j, bytes32 _k, bytes32 _l, bytes32 _m, bytes32 _n) returns(bool)
func (_Contract *ContractSession) SetData(_a *big.Int, _b *big.Int, _c *big.Int, _d *big.Int, _e *big.Int, _f *big.Int, _g *big.Int, _h *big.Int, _i [32]byte, _j [32]byte, _k [32]byte, _l [32]byte, _m [32]byte, _n [32]byte) (*types.Transaction, error) {
	return _Contract.Contract.SetData(&_Contract.TransactOpts, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n)
}

// SetData is a paid mutator transaction binding the contract method 0xfb0953b6.
//
// Solidity: function setData(uint256 _a, uint256 _b, uint256 _c, uint256 _d, uint256 _e, uint256 _f, uint256 _g, uint256 _h, bytes32 _i, bytes32 _j, bytes32 _k, bytes32 _l, bytes32 _m, bytes32 _n) returns(bool)
func (_Contract *ContractTransactorSession) SetData(_a *big.Int, _b *big.Int, _c *big.Int, _d *big.Int, _e *big.Int, _f *big.Int, _g *big.Int, _h *big.Int, _i [32]byte, _j [32]byte, _k [32]byte, _l [32]byte, _m [32]byte, _n [32]byte) (*types.Transaction, error) {
	return _Contract.Contract.SetData(&_Contract.TransactOpts, _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n)
}
